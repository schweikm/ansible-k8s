---

- name: CRI-O
  hosts: control_plane,workers
  gather_facts: true
  gather_subset:
    - min
  tags:
    - crio
  vars:
    manage_lvm: false
  tasks:
    - name: Configure LVM
      when: manage_lvm
      block:
        - name: Create volume group
          community.general.lvg:
            state: present
            pvs:
              - "{{ crio_pv }}"
            vg: "{{ crio_vg }}"

        - name: Create CRI-O LV
          ansible.builtin.include_tasks: tasks/create_lv.yml
          vars:
            vg_name: "{{ crio_vg }}"
            lv_name: "{{ crio_lv }}"
            lv_size: 50g
            lv_fstype: xfs
            lv_mount_dir: /var/lib/containers

    - name: Load modules
      ansible.builtin.include_tasks: tasks/systemd_load_module.yml
      vars:
        module: "{{ item }}"
        persistent: true
      loop:
        - br_netfilter
        - overlay

    - name: Kernel Settings
      ansible.posix.sysctl:
        name: "{{ item.name }}"
        value: "{{ item.value }}"
        sysctl_file: /etc/sysctl.d/k8s.conf
        sysctl_set: true
        state: present
        reload: true
      loop:
        - { name: net.ipv4.ip_forward, value: '1' }
        - { name: net.bridge.bridge-nf-call-iptables, value: '1' }
        - { name: net.bridge.bridge-nf-call-ip6tables, value: '1' }

    - name: Deliver RPM GPG KEY
      ansible.builtin.copy:
        src: files/RPM-GPG-KEY-CRI-O
        dest: /etc/pki/rpm-gpg/RPM-GPG-KEY-CRI-O
        owner: root
        group: root
        mode: "0644"

    - name: Import RPM GPG KEY
      ansible.builtin.rpm_key:
        state: present
        key: /etc/pki/rpm-gpg/RPM-GPG-KEY-CRI-O

    - name: Create CRI-O yum repo
      ansible.builtin.yum_repository:
        state: present
        name: CRI-O
        description: CRI-O
        baseurl: "https://pkgs.k8s.io/addons:/cri-o:/stable:/v{{ k8s.version.major }}.{{ k8s.version.minor }}/rpm/"
        enabled: true
        gpgcheck: true
        gpgkey:
          - 'file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CRI-O'
        owner: root
        group: root
        mode: "0644"

    - name: Install CRI-O packages
      ansible.builtin.dnf:
        name:
          - cri-o
          - containernetworking-plugins
          - container-selinux
        state: installed
      notify:
        - Restart crio

    - name: Create CNI directories
      ansible.builtin.file:
        state: directory
        path: "{{ item }}"
        owner: root
        group: root
        mode: "0755"
      loop:
        - /etc/cni/net.d
        - /var/lib/crio

    - name: Create default CNI configuration
      ansible.builtin.copy:
        src: files/10-crio-bridge.conflist
        dest: /etc/cni/net.d/10-crio-bridge.conflist
        owner: root
        group: root
        mode: "0644"
      notify:
        - Restart crio

    - name: Start CRI-O service
      ansible.builtin.systemd:
        name: crio
        state: started
        enabled: true
        daemon_reload: true

  handlers:
    - name: Restart crio
      ansible.builtin.systemd:
        name: crio
        state: restarted
