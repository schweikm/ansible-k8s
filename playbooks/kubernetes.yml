---

- name: Kubernetes
  hosts: control_plane,workers
  gather_facts: true
  gather_subset:
    - min
    - network
  tags:
    - k8s
  vars:
    manage_lvm: false
  tasks:
    - name: Control Plane IP is unique
      when: "control_plane.ip != hostvars[groups['primary'][0]]['control_plane_ip']"
      block:
        - name: Add host entry for control plane vip
          ansible.builtin.include_tasks: tasks/add_host_entry.yml
          vars:
            host_ip: "{{ control_plane.ip }}"
            host_fqdn: "{{ control_plane.dns }}"

        - name: Add host entry for primary
          ansible.builtin.include_tasks: tasks/add_host_entry.yml
          vars:
            host_ip: "{{ hostvars[item]['control_plane_ip'] }}"
            host_fqdn: "{{ item }}"
          loop: "{{ groups['primary'] }}"

    - name: Control Plane IP is shared
      when: "control_plane.ip == hostvars[groups['primary'][0]]['control_plane_ip']"
      block:
        - name: Add host entry for primary and vip
          ansible.builtin.include_tasks: tasks/add_host_entry.yml
          vars:
            host_ip: "{{ hostvars[item]['control_plane_ip'] }}"
            host_fqdn: "{{ item }}"
            host_aliases:
              - "{{ control_plane.dns }}"
          loop: "{{ groups['primary'] }}"

    - name: Add host entry for backups
      ansible.builtin.include_tasks: tasks/add_host_entry.yml
      vars:
        host_ip: "{{ hostvars[item]['control_plane_ip'] }}"
        host_fqdn: "{{ item }}"
      loop: "{{ groups['backups'] }}"

    - name: Add host entry for workers
      ansible.builtin.include_tasks: tasks/add_host_entry.yml
      vars:
        host_ip: "{{ hostvars[item]['control_plane_ip'] }}"
        host_fqdn: "{{ item }}"
      loop: "{{ groups['workers'] }}"

    - name: Create etcd LV
      ansible.builtin.include_tasks: tasks/create_lv.yml
      vars:
        vg_name: "{{ crio_vg }}"
        lv_name: var_lib_etcd
        lv_size: 2g
        lv_mount_dir: /var/lib/etcd
      when: manage_lvm

    - name: Ensure etcd is empty
      ansible.builtin.file:
        path: /var/lib/etcd/lost+found
        state: absent

    - name: Deliver RPM GPG KEY
      ansible.builtin.copy:
        src: files/RPM-GPG-KEY-kubernetes-2023
        dest: /etc/pki/rpm-gpg/RPM-GPG-KEY-kubernetes-2023
        owner: root
        group: root
        mode: "0644"

    - name: Import RPM GPG KEY
      ansible.builtin.rpm_key:
        state: present
        key: /etc/pki/rpm-gpg/RPM-GPG-KEY-kubernetes-2023

    - name: Create kubernetes yum repo
      ansible.builtin.yum_repository:
        state: present
        name: Kubernetes
        description: Kubernetes
        baseurl: "https://pkgs.k8s.io/core:/stable:/v{{ k8s.version.major }}.{{ k8s.version.minor }}/rpm/"
        enabled: true
        gpgcheck: true
        gpgkey:
          - 'file:///etc/pki/rpm-gpg/RPM-GPG-KEY-kubernetes-2023'
        owner: root
        group: root
        mode: "0644"

    - name: Install Kubernetes packages
      ansible.builtin.dnf:
        name:
          - "kubeadm-{{ k8s.version.major }}.{{ k8s.version.minor }}.{{ k8s.version.patch }}"
          - "kubectl-{{ k8s.version.major }}.{{ k8s.version.minor }}.{{ k8s.version.patch }}"
          - "kubelet-{{ k8s.version.major }}.{{ k8s.version.minor }}.{{ k8s.version.patch }}"
          - socat
          - iproute-tc
        state: installed

    - name: Start kubelet service
      ansible.builtin.systemd:
        name: kubelet
        state: started
        enabled: true
        daemon_reload: true

    - name: Pull Images
      ansible.builtin.command:
        argv:
          - /usr/bin/kubeadm
          - config
          - images
          - pull
          - --kubernetes-version
          - "{{ k8s.version.major }}.{{ k8s.version.minor }}.{{ k8s.version.major }}"
      changed_when: false

    - name: Kubeadm init
      ansible.builtin.include_tasks: tasks/kubeadm_init.yml
      when: inventory_hostname in groups['primary']

    - name: Kubeadm join
      ansible.builtin.include_tasks: tasks/kubeadm_join.yml
      when: inventory_hostname in groups['backups']

    - name: Create .kube directory
      ansible.builtin.file:
        path: /root/.kube
        state: directory
        owner: root
        group: root
        mode: "0700"
      when: inventory_hostname in groups['control_plane']

    - name: Setup default login
      ansible.builtin.copy:
        src: /etc/kubernetes/admin.conf
        dest: /root/.kube/config
        remote_src: true
        owner: root
        group: root
        mode: "0600"
      when: inventory_hostname in groups['control_plane']
